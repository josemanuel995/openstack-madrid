- name: Create server instances
  os_server:
    cloud:            "{{ instance.cloud | default(default_cloud) | default('ospcloud') }}"
    state:            "{{ osp_server_state | default(osp_state) | default('present') }}"
    name:             "{{ instance.instance_name }}"
    image:            "{{ instance.image | default(default_image) | default('rhel-guest') }}"
    meta:             "group={{ instance.group }},deployment_name={{ instance.deployment }}"
    flavor:           "{{ instance.flavor | default(default_flavor) | default('m2.small') }}"
    security_groups:  "{{ instance.security_group_name }}"
    key_name:         "{{ instance.key_name | default('ansible_ssh') }}"
    wait: yes
    nics:
    - net-name: int_network
      #    - net-name: ext_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  loop: "{{ openstack_instances }}"      
  loop_control:
    loop_var: instance
  async: 900
  poll: 0
  register: r_instances

- name: Wait for OSP instance creation to complete
  async_status: jid={{ item.ansible_job_id }}
  register: r_wait
  until: r_wait.finished
  retries: 900
  loop: "{{ r_instances.results }}"

- name: Output instances name
  debug:
    msg: "Server is {{ item.instance.instance_name }}"
  loop: "{{ r_instances.results }}"


- name: Add floating IP to instances
  os_floating_ip:
    cloud: ospcloud
    state: present
    reuse: yes
    server: "{{ item.instance.instance_name }}"
    network: ext_network
    wait: true
    timeout: 180
  loop: "{{ r_instances.results }}"
  register: r_floating_ips

- name: Wait for servers by name to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  loop: "{{ r_floating_ips.results }}"
  delegate_to: "{{ inventory_hostname }}"
...  
